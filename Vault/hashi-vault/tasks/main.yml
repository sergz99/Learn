---
# tasks file for hashi-vault
   - name: Return all secrets from a path
     ansible.builtin.set_fact:
       my_secrets: "{{ lookup('community.hashi_vault.hashi_vault', 'secret={{ mount_point }}/{{ service }} token={{ token }} url={{ vault_addr }}') }}"
     ignore_errors: true
   - ansible.builtin.debug:
       msg: "List of services '{{ item.key }}' has value '{{ item.value }}'"
     loop: "{{ my_secrets | dict2items }}"
     ignore_errors: true

   - name: Return secrets/login from a path
     ansible.builtin.set_fact:
       my_secrets: "{{ lookup('community.hashi_vault.hashi_vault', 'secret={{ mount_point }}/{{ service }}:{{ login }} token={{ token }} url={{ vault_addr }}') }}"
     register: result
     ignore_errors: true

   - ansible.builtin.debug:
       msg: "The '{{ service }}' service already has a password '{{ my_secrets }}' for login '{{ login }}'"
     when: result is succeeded

   - name: create lowercase 8 character password
     set_fact:
        setup_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length={{ passwd_length }}') }}"
     when: result is failed
   - name: Print setup_password
     ansible.builtin.debug:
        var: setup_password
     when: result is failed

   - name: Write secret to Vault
     hashivault_write:
        url: "{{ vault_addr }}"
        token: "{{ token }}"
        mount_point: {{ mount_point }}
        update: yes
        secret: "{{ service }}"
        data:
           '{ "{{ login }}": "{{ setup_password }}" }'
     when: result is failed
